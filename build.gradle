plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.liquibase.gradle" version "2.0.4"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//DB manipulation
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//html pages
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//it's the basics for a web project
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//liquibase
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	//connector with MySQL
	runtimeOnly 'mysql:mysql-connector-java'
	//allows you to use annotations that replace getters and setters for example
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//these imports allowed to validate an entity's fields with the database using liquibase
	liquibaseRuntime "org.liquibase:liquibase-core"
	//liquibaseRuntime "org.liquibase.ext:liquibase-hibernate5:${liquibaseHibernate5Version}"
	liquibaseRuntime "org.liquibase.ext:liquibase-hibernate5"
	liquibaseRuntime sourceSets.main.compileClasspath

	//allows the use of annotations for validating an entity's fields
	implementation "javax.annotation:javax.annotation-api"
	implementation "javax.transaction:javax.transaction-api"
	implementation "javax.cache:cache-api"

	//this lets use @audit. When applied to a class, indicates that all of its properties should be
	// audited. When applied to a field, indicates that this field should be audited.
	implementation "org.hibernate:hibernate-envers"

	//packages for security a jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.security:spring-security-config"
	implementation "org.springframework.security:spring-security-data"
	implementation "org.springframework.security:spring-security-web"
	implementation "org.apache.commons:commons-lang3"
	implementation 'org.springframework.security:spring-security-crypto:5.5.3'

	//Jackson is an object handler and converter for Json and in reverse. Serialization/deserialization
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
	implementation "com.fasterxml.jackson.core:jackson-annotations"
	implementation "com.fasterxml.jackson.core:jackson-databind"

	//allows Jackson and Lombok to work together
	implementation "com.xebia:jackson-lombok:1.1"
	implementation "org.projectlombok:lombok:1.18.12"
	implementation "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	annotationProcessor "org.projectlombok:lombok:1.18.12"

	//It allows using an interface with generics (EntityMapper) to do automatic mapping, between object and DTO
	implementation "org.mapstruct:mapstruct:1.3.1.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"

	// is a set of libraries that makes it easy to produce application/problem+json responses from a Spring application
	implementation 'org.zalando:problem-spring-web:0.27.0'

	//this part allows you to use queryDsl
	implementation "com.querydsl:querydsl-jpa:4.4.0"
	implementation "com.querydsl:querydsl-sql:4.4.0"
	implementation 'org.bitbucket.gt_tech:spring-data-querydsl-value-operators:4.0.0'
	implementation "com.querydsl:querydsl-sql-spring:4.4.0"
	annotationProcessor("javax.annotation:javax.annotation-api:1.3.2")
	annotationProcessor("com.querydsl:querydsl-apt:4.4.0:jpa")

	//this single dependency makes swagger/openAPI work
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	//as of spring 2.30 this dependency no longer comes by default and it is for validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.1'
}

test {
	useJUnitPlatform()
}

project.ext.diffChangelogFile = "src/main/resources/config/liquibase/changelog/" + new Date().format("yyyyMMddHHmmss") + "_changelog.xml"

sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}

task cleanResources(type: Delete) {
	delete "build/resources"
}

wrapper {
	gradleVersion = "6.8.3"
}

liquibase {
	activities {
		main {
			driver "com.mysql.cj.jdbc.Driver"
			url "jdbc:mysql://localhost:3306/gft"
			username "gft"
			password "gft"
			changeLogFile "src/main/resources/config/liquibase/master.xml"
			defaultSchemaName "gft"
			logLevel "debug"
			classpath "src/main/resources/"
		}
		diffLog {
			driver "com.mysql.cj.jdbc.Driver"
			url "jdbc:mysql://localhost:3306/gft?allowPublicKeyRetrieval=true"
			username "gft"
			password "gft"
			changeLogFile project.ext.diffChangelogFile
//			excludeObjects
			referenceUrl "hibernate:spring:br.org.gft.domain?dialect=org.hibernate.dialect.MySQL8Dialect&hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy"
			defaultSchemaName "gft"
			logLevel "debug"
			classpath "$buildDir/classes/java/main"
		}
	}

	runList = project.ext
}
